[gd_scene load_steps=140 format=3 uid="uid://bjjjxnrku30bh"]

[ext_resource type="Texture2D" uid="uid://cy27knyrsv4tp" path="res://assets/sprites/main_character/Main Character (Combo Attack).png" id="1_2v62t"]
[ext_resource type="PackedScene" uid="uid://dbx0cw5vp2n52" path="res://card_projectile.tscn" id="1_qthh5"]
[ext_resource type="Texture2D" uid="uid://c32hmb1idobsh" path="res://assets/sprites/main_character/Main Character (Dash).png" id="2_wcpx6"]
[ext_resource type="Texture2D" uid="uid://6kflqel1lcwi" path="res://assets/sprites/main_character/Main Character (Double Jump).png" id="3_u3evn"]
[ext_resource type="Texture2D" uid="uid://bat2ppmmnxjqj" path="res://assets/sprites/main_character/Main Character (Fall).png" id="4_5q0wt"]
[ext_resource type="Texture2D" uid="uid://ducplm0rr7dpv" path="res://assets/sprites/main_character/Main Character.png" id="5_qthh5"]
[ext_resource type="Texture2D" uid="uid://b716v7x6n18rk" path="res://assets/sprites/main_character/Main Character (Hurt).png" id="5_u3evn"]
[ext_resource type="Texture2D" uid="uid://cc3a8j0vc5nn7" path="res://assets/sprites/main_character/Main Character (Jump).png" id="6_1vudk"]
[ext_resource type="Texture2D" uid="uid://b1be5ush0lv6r" path="res://assets/sprites/main_character/Main Character (Walk).png" id="7_k7f46"]
[ext_resource type="Texture2D" uid="uid://1agkpsopg74k" path="res://assets/sprites/main_character/Main Character (Parry).png" id="7_wcpx6"]
[ext_resource type="Texture2D" uid="uid://map5f2ut1m6d" path="res://assets/sprites/main_character/Main Character (Projectile).png" id="9_5q0wt"]
[ext_resource type="AudioStream" uid="uid://b2ldxgqwaxos4" path="res://assets/audio/Jaeger/ParrySFX.MP3" id="12_dypn8"]
[ext_resource type="AudioStream" uid="uid://ckbk721d8gcq1" path="res://assets/audio/Jaeger/Attack1SFX.MP3" id="13_07ek2"]
[ext_resource type="AudioStream" uid="uid://hwx8xj6tjfmw" path="res://assets/audio/Jaeger/Attack2SFX.MP3" id="14_kg3iu"]
[ext_resource type="AudioStream" uid="uid://rcby6fu3kag5" path="res://assets/audio/Jaeger/Attack3SFX.MP3" id="15_mjyag"]
[ext_resource type="AudioStream" uid="uid://07ilxmgqu2mm" path="res://assets/audio/Jaeger/HurtSFX.mp3" id="16_kg3iu"]
[ext_resource type="AudioStream" uid="uid://btkf066m1dw1m" path="res://assets/audio/Jaeger/ProjectileSFX.MP3" id="17_mjyag"]
[ext_resource type="AudioStream" uid="uid://dis2ptoxido8y" path="res://assets/audio/Jaeger/DashSFX.MP3" id="18_mjyag"]
[ext_resource type="AudioStream" uid="uid://cx6abb4txmw7y" path="res://assets/audio/Jaeger/DrawSFX.MP3" id="19_wtyc1"]
[ext_resource type="AudioStream" uid="uid://dcarmlfdu1dua" path="res://assets/audio/Jaeger/WalkSFX.MP3" id="20_wevls"]
[ext_resource type="AudioStream" uid="uid://iaejir76ucuq" path="res://assets/audio/Jaeger/JumpSFX.mp3" id="21_8013f"]
[ext_resource type="AudioStream" uid="uid://bi04i3hun1yh1" path="res://assets/audio/Jaeger/DoubleJumpSFX.mp3" id="22_y5ku0"]

[sub_resource type="GDScript" id="GDScript_wtcfe"]
script/source = "# main_character.gd
extends CharacterBody2D

# ========== CORE MOVEMENT / STATE ==========
@export var speed: float = 500.0
@export var jump_velocity: float = -450.0
@export var gravity: float = 900.0
@export var dash_speed: float = 900.0
@export var dash_duration: float = 0.25
var dash_timer: float = 0.0
var dash_cd_timer: float = 0.0

# Double jump
@export var max_jumps: int = 2
var jump_count: int = 0
var can_move := true
var is_frozen: bool = false

# Flags
var is_attacking = false
var is_dashing = false
var is_parrying = false
var is_jumping = false
var is_shooting = false
var facing_dir: int = -1

# ========== HEALTH ==========
var max_health: int:
	get: return int(GameState.stats.get(\"max_health\", 100))
	set(value):
		GameState.stats[\"max_health\"] = int(value)
		# jaga agar current_health tidak > max
		GameState.stats[\"current_health\"] = min(
			int(GameState.stats.get(\"current_health\", value)),
			int(value)
		)
		# emit agar listener (UI dll) tau perubahan
		GameState.stats_changed.emit(GameState.stats)
		# update UI langsung jika kita menemukan health_bar
		if health_bar:
			health_bar.max_value = float(GameState.stats[\"max_health\"])
			# sync current value juga
			health_bar.value = float(GameState.stats[\"current_health\"])

var current_health: int:
	get: return int(GameState.stats.get(\"current_health\", max_health))
	set(value):
		# pakai clamp untuk menjamin integer dalam range
		GameState.stats[\"current_health\"] = clamp(int(value), 0, int(GameState.stats.get(\"max_health\", 100)))
		GameState.stats_changed.emit(GameState.stats)
		# update UI langsung jika ada
		if health_bar:
			health_bar.value = float(GameState.stats[\"current_health\"])

var damage: int:
	get: return int(GameState.stats.get(\"damage\", 10))
	set(value):
		GameState.stats[\"damage\"] = int(value)
		GameState.stats_changed.emit(GameState.stats)

var dash_cooldown: float:
	get: return float(GameState.stats.get(\"dash_cooldown\", 0.6))
	set(value):
		GameState.stats[\"dash_cooldown\"] = float(value)
		GameState.stats_changed.emit(GameState.stats)

# health_bar sekarang di-inisialisasi secara aman di _ready()
var health_bar: TextureProgressBar = null


# Hurt/invuln (from TestArea)
var is_hurt: bool = false
var invulnerable: bool = false
@export var invuln_time: float = 0.1
var invuln_timer: float = 0.0
@export var knockback_force: float = 200.0
@export var knockback_up: float = -150.0

# ========== ATTACK / COMBO ==========
var combo_step = 0
var max_combo = 3

# Lunge
@export var lunge_force: float = 10.0
@export var lunge_duration: float = 0.1
var lunge_timer: float = 0.0

# Projectile
@export var projectile_scene: PackedScene
@onready var spawn_point: Node2D = $SpawnPoint
var projectile_spawned: bool = false

# Timers
@onready var attack_timer: Timer = $StateMachine/AttackTimer
@onready var attack_cooldown_timer: Timer = $StateMachine/AttackCooldownTimer
@onready var attack_combo_timer: Timer = $StateMachine/AttackComboTimer
@onready var camera: Camera2D = $Camera2D

# Sprite + nodes
@onready var sprite: AnimatedSprite2D = $AnimatedSprite2D
@onready var hurtbox: Area2D = $HurtBox
@onready var parry_area: CollisionShape2D = $ParryArea/CollisionShape2D
@onready var attack_area: CollisionShape2D = $AttackArea/CollisionShape2D
@onready var parrysfx: AudioStreamPlayer= $Audio/Parry
@onready var attack1sfx: AudioStreamPlayer= $Audio/Attack1
@onready var attack2sfx: AudioStreamPlayer= $Audio/Attack2
@onready var attack3sfx: AudioStreamPlayer= $Audio/Attack3
@onready var hurtsfx: AudioStreamPlayer= $Audio/Hurt
@onready var projectilesfx: AudioStreamPlayer= $Audio/Projectile
@onready var dashsfx: AudioStreamPlayer = $Audio/Dash
@onready var drawsfx: AudioStreamPlayer = $Audio/Draw
@onready var walksfx: AudioStreamPlayer = $Audio/Walk
@onready var jumpsfx: AudioStreamPlayer = $Audio/Jump
@onready var doublejumpsfx: AudioStreamPlayer = $Audio/DoubleJump

# store parents for robust world/local conversions
var attack_parent: Node = null
var parry_parent: Node = null

# ParryStun
@export var parry_stun_duration: float = 0.5
var parry_stun_area: Area2D = null
var _parry_stun_active: bool = false

# NEW: disable hurtbox when parry meets parry
@export var parry_disable_hurt_duration: float = 1
var _hurtbox_disabled_active: bool = false
var _hurtbox_original_layer: int = 0
var _hurtbox_original_mask: int = 0

# Attack hitbox frames mapping
var attack_hitbox_frames = {
	\"attack_1\": {\"on\": 3, \"off\": 5},
	\"attack_2\": {\"on\": 1, \"off\": 5},
	\"attack_3\": {\"on\": 3, \"off\": 8}
}

# Parry hitbox frames
var parry_hitbox_frames = {
	\"parry\": {\"on\": 4, \"off\": 8}
}

# local offsets stored at ready
var attack_area_offset: Vector2 = Vector2.ZERO
var spawn_point_offset: Vector2 = Vector2.ZERO
var parry_area_offset: Vector2 = Vector2.ZERO

# ========== SCREEN SHAKE ==========
@export var shake_strength: float = 8.0
@export var shake_decay: float = 5.0
var shake_amount: float = 0.0

func start_shake(strength: float = 8.0) -> void:
	shake_amount = strength

func _process(delta: float) -> void:
	if shake_amount > 0:
		if has_node(\"Camera2D2\"):
			$Camera2D2.offset = Vector2(
				randf_range(-1, 1),
				randf_range(-1, 1)
			) * shake_amount
		shake_amount = max(shake_amount - shake_decay * delta, 0)
	else:
		if has_node(\"Camera2D2\"):
			$Camera2D2.offset = Vector2.ZERO

# utility: cari node TextureProgressBar secara rekursif di suatu root
func _find_health_bar(node: Node) -> TextureProgressBar:
	if node is TextureProgressBar:
		return node
	for child in node.get_children():
		if child is Node:
			var found := _find_health_bar(child)
			if found:
				return found
	return null

func _ready():
	# cari attack offsets / parents seperti sebelumnya
	if attack_area:
		attack_area_offset = attack_area.position
		attack_parent = attack_area.get_parent()
	if spawn_point:
		spawn_point_offset = spawn_point.position
	if parry_area:
		parry_area_offset = parry_area.position
		parry_parent = parry_area.get_parent()

	sprite.frame_changed.connect(_on_sprite_frame_changed)
	sprite.animation_finished.connect(_on_animation_finished)
	attack_timer.timeout.connect(_on_attack_timer_timeout)
	attack_cooldown_timer.timeout.connect(_on_attack_cooldown_timeout)
	attack_combo_timer.timeout.connect(_on_attack_combo_timeout)
	walksfx.stream.loop = true

	if hurtbox:
		hurtbox.area_entered.connect(_on_hurtbox_area_entered)

	# ------------------ HEALTH BAR: cari dengan aman ------------------
	# coba cari di current_scene dulu, kalau null pakai root
	var scene_root := get_tree().current_scene
	if scene_root == null:
		scene_root = get_tree().root

	health_bar = _find_health_bar(scene_root)
	if health_bar:
		# inisialisasi nilai UI
		health_bar.max_value = float(max_health)
		health_bar.value = float(current_health)
		print(\"[Player] Health bar ditemukan dan diset:\", health_bar, \"cur:\", current_health, \"max:\", max_health)
	else:
		print(\"[Player] Health bar TIDAK ditemukan otomatis. Pastikan HPBar.gd attach atau GameState autoload benar.\")

	# disable attack/parry areas as before
	if attack_area:
		attack_area.disabled = true
	if parry_area:
		parry_area.disabled = true

	# parry_stun setup (sama)
	if has_node(\"ParryStun\"):
		parry_stun_area = $ParryStun
		if parry_stun_area and parry_stun_area.has_node(\"CollisionShape2D\"):
			parry_stun_area.get_node(\"CollisionShape2D\").disabled = true
		if parry_stun_area:
			parry_stun_area.monitoring = false

	if parry_parent and parry_parent.has_signal(\"area_entered\"):
		parry_parent.area_entered.connect(_on_parry_area_entered)

func _physics_process(delta: float) -> void:
	if current_health <= 0:
		return
	if is_frozen:
		# tetap apply gravitasi supaya mendarat wajar
		if not is_on_floor():
			velocity.y += gravity * delta
		else:
			velocity.y = 0
		velocity.x = 0
		move_and_slide()
		return

	# jalanin cooldown timer kalau masih > 0
	if dash_cd_timer > 0.0:
		dash_cd_timer -= delta
	if is_hurt:
		if not is_on_floor():
			velocity.y += gravity * delta
		else:
			velocity.y = 0
		move_and_slide()
		if invulnerable:
			invuln_timer -= delta
			if invuln_timer <= 0.0:
				invulnerable = false
		return

	if is_parrying:
		if not is_on_floor():
			velocity.y += gravity * delta
		else:
			velocity.y = 0
		velocity.x = 0
		move_and_slide()
		return

	if is_shooting:
		if not is_on_floor():
			velocity.y += gravity * delta
		else:
			velocity.y = 0
		velocity.x = 0
		move_and_slide()
		return

	if is_dashing:
		dash_timer -= delta
		velocity.y = 0
		velocity.x = facing_dir * dash_speed
		dashsfx.play()
		if sprite.animation != \"dash\":
			sprite.play(\"dash\")
		if dash_timer <= 0:
			is_dashing = false
		move_and_slide()
		return

	if not is_on_floor():
		velocity.y += gravity * delta
		if velocity.y < 0:
			if jump_count == 1 and sprite.animation != \"jump\":
				jumpsfx.play()
				sprite.play(\"jump\")
			elif jump_count == 2 and sprite.animation != \"doublejump\":
				sprite.play(\"doublejump\")
		else:
			if sprite.animation != \"fall\":
				sprite.play(\"fall\")
	else:
		if is_jumping:
			is_jumping = false
		jump_count = 0

	if Input.is_action_just_pressed(\"jump\") and not is_parrying:
		if jump_count < max_jumps:
			velocity.y = jump_velocity
			jump_count += 1
			is_jumping = true
			if jump_count == 1:
				sprite.play(\"jump\")
			else:
				doublejumpsfx.play()
				sprite.play(\"doublejump\")

	if Input.is_action_just_pressed(\"parry\") and not is_dashing and not is_attacking and not is_parrying and is_on_floor():
		is_parrying = true
		velocity.x = 0
		drawsfx.play()
		sprite.play(\"parry\")

	if Input.is_action_just_pressed(\"attack\") and not is_dashing and not is_parrying and not is_shooting and is_on_floor():
		try_attack()

	if Input.is_action_just_pressed(\"projectile\") and not is_dashing and not is_parrying and not is_attacking and not is_shooting:
		is_shooting = true
		projectile_spawned = false
		sprite.play(\"projectile\")

	var dir := 0.0
	if Input.is_action_pressed(\"move_right\"):
		dir += 1.0
	if Input.is_action_pressed(\"move_left\"):
		dir -= 1.0

	if dir != 0:
		facing_dir = 1 if dir > 0 else -1

	if Input.is_action_just_pressed(\"dash\") and not is_dashing and not is_parrying and dir != 0:
		if dash_cd_timer <= 0.0:   # hanya boleh dash kalau cooldown habis
			is_dashing = true
			dash_timer = dash_duration
			dash_cd_timer = dash_cooldown   # reset cooldown
			velocity.x = dir * dash_speed
			velocity.y = 0
			sprite.play(\"dash\")
			return

	if is_attacking:
		if lunge_timer > 0:
			lunge_timer -= delta
			velocity.x = facing_dir * lunge_force
		else:
			velocity.x = 0
	else:
		velocity.x = dir * speed
		if is_on_floor() and not is_attacking and not is_parrying and not is_shooting:
			if dir != 0:
				if sprite.animation != \"walk\":
					sprite.play(\"walk\")
				if not walksfx.playing:   # pastikan tidak dobel
					walksfx.play()
			else:
				if sprite.animation != \"idle\":
					sprite.play(\"idle\")
				if walksfx.playing:
					walksfx.stop()
		else:
			# kalau di udara, matikan suara jalan
			if walksfx.playing:
				walksfx.stop()

	if dir != 0:
		sprite.flip_h = (facing_dir < 0)

		if attack_area:
			attack_area.position.x = attack_area_offset.x * facing_dir

		if spawn_point:
			spawn_point.position.x = spawn_point_offset.x * facing_dir

		if attack_area and parry_area:
			var attack_world_pos: Vector2
			var a_parent := attack_area.get_parent()
			if a_parent and a_parent is Node2D:
				attack_world_pos = (a_parent as Node2D).to_global(attack_area.position)
			else:
				attack_world_pos = attack_area.global_position

			var p_parent := parry_area.get_parent()
			if p_parent and p_parent is Node2D:
				var local_pos := (p_parent as Node2D).to_local(attack_world_pos)
				parry_area.position = local_pos
			else:
				parry_area.position.x = parry_area_offset.x * facing_dir

	move_and_slide()

# ========== DAMAGE (TestArea) ==========
func _on_hurtbox_area_entered(area: Area2D) -> void:
	if _hurtbox_disabled_active:
		return
	if invulnerable:
		return
	if area.name == \"TestArea\" or area.name == \"HitArea\":
		var source: Node = null
		if area.get_parent() and area.get_parent() is Node2D:
			source = area.get_parent() as Node2D
		else:
			source = area
		take_damage(5, source, area.name)

func take_damage(amount: int, source: Node = null, from_area_name: String = \"\") -> void:
	if _hurtbox_disabled_active:
		return
	if invulnerable:
		return

	# debug: tunjukkan pemanggilan
	print(\"[Player] take_damage:\", amount, \"before:\", GameState.stats.get(\"current_health\"))

	# ubah health via property -> akan memicu GameState.stats_changed.emit dan update UI jika health_bar tersedia
	current_health -= amount

	# anim + audio + invuln
	if sprite.animation != \"hurt\":
		hurtsfx.play()
		sprite.play(\"hurt\")
	invulnerable = true
	invuln_timer = invuln_time
	is_hurt = true

	# SCREEN SHAKE jika kena HitArea
	if from_area_name == \"HitArea\":
		start_shake(shake_strength)

	var dir:int = 0
	if source != null and source is Node2D:
		dir = sign(global_position.x - (source as Node2D).global_position.x)
		if dir == 0:
			dir = 1
	else:
		dir = -facing_dir

	velocity.x = dir * knockback_force
	velocity.y = knockback_up

	is_attacking = false
	is_parrying = false
	is_dashing = false
	is_shooting = false
	lunge_timer = 0.0

	await sprite.animation_finished
	is_hurt = false

	if current_health <= 0:
		die()

func die() -> void:
	get_tree().change_scene_to_file(\"res://assets/hpbar/game_over_menu.tscn\")

# ========== ATTACKS / PROJECTILES ==========
func try_attack():
	if attack_cooldown_timer.is_stopped():
		if attack_combo_timer.is_stopped():
			combo_step = 0
		combo_step += 1
		if combo_step > max_combo:
			combo_step = 1
		is_attacking = true
		lunge_timer = lunge_duration
		sprite.play(\"attack_%d\" % combo_step)

		# ----- play corresponding attack SFX -----
		match combo_step:
			1:
				if attack1sfx != null:
					attack1sfx.play()
			2:
				if attack2sfx != null:
					attack2sfx.play()
			3:
				if attack3sfx != null:
					attack3sfx.play()

		attack_timer.start()
		attack_cooldown_timer.start()
		attack_combo_timer.start()

func spawn_projectile():
	if projectile_scene:
		var bullet = projectile_scene.instantiate()
		get_parent().add_child(bullet)
		bullet.global_position = spawn_point.global_position
		bullet.direction = facing_dir
		if bullet.has_node(\"AnimatedSprite2D\"):
			if bullet.has_node(\"HitArea\"):
				bullet.get_node(\"HitArea\").set_meta(\"damage\", GameState.damage_for(\"projectile\"))
			var spr: AnimatedSprite2D = bullet.get_node(\"AnimatedSprite2D\")
			spr.flip_h = (facing_dir < 0)
			projectilesfx.play()
			spr.play(\"default\")

# ========== ANIM / FRAME EVENTS ==========
func _on_sprite_frame_changed():
	var anim_name = sprite.animation
	if anim_name in attack_hitbox_frames:
		var frame_data = attack_hitbox_frames[anim_name]
		if sprite.frame == frame_data[\"on\"]:
			attack_area.disabled = false
		elif sprite.frame == frame_data[\"off\"]:
			attack_area.disabled = true

	if anim_name in parry_hitbox_frames:
		var parry_data = parry_hitbox_frames[anim_name]
		if sprite.frame == parry_data[\"on\"]:
			parry_area.disabled = false
			if parry_area.has_method(\"set_meta\"):
				parry_area.set_meta(\"damage\", GameState.damage_for(\"parry\"))
		elif sprite.frame == parry_data[\"off\"]:
			parry_area.disabled = true

	if anim_name == \"projectile\" and sprite.frame == 4 and not projectile_spawned:
		spawn_projectile()
		projectile_spawned = true

func _on_animation_finished():
	if sprite.animation == \"parry\":
		is_parrying = false
		parry_area.disabled = true
	elif sprite.animation == \"projectile\":
		is_shooting = false
		projectile_spawned = false

func _on_attack_timer_timeout():
	attack_area.disabled = true
	is_attacking = false

func _on_attack_cooldown_timeout():
	pass

func _on_attack_combo_timeout():
	combo_step = 0

# ==================== PARRY MEET DETECTION ====================
func _on_parry_area_entered(area: Area2D) -> void:
	if area.get_parent() == self or area.owner == self:
		return
	if area.name == \"ParryAttack\" or area.is_in_group(\"parry_attack\"):
		_activate_parry_stun()

func _activate_parry_stun(duration: float = 0.5) -> void:
	if _parry_stun_active:
		return
	_parry_stun_active = true

	if parry_stun_area == null:
		print(\"[_activate_parry_stun] parry_stun_area belum diset!\")
		_parry_stun_active = false
		return

	Engine.time_scale = 0.3
	parrysfx.play()

	var original_zoom: Vector2 = camera.zoom
	var target_zoom: Vector2 = original_zoom * 1.2

	var tween_in := create_tween()
	tween_in.tween_property(camera, \"zoom\", target_zoom, 0.1)

	parry_stun_area.set_deferred(\"monitoring\", true)
	for child in parry_stun_area.get_children():
		if child is CollisionShape2D:
			(child as CollisionShape2D).set_deferred(\"disabled\", false)

	await get_tree().create_timer(duration, true).timeout

	for child in parry_stun_area.get_children():
		if child is CollisionShape2D:
			(child as CollisionShape2D).set_deferred(\"disabled\", true)
	parry_stun_area.set_deferred(\"monitoring\", false)
	_parry_stun_active = false

	Engine.time_scale = 1.0

	var tween_out := create_tween()
	tween_out.tween_property(camera, \"zoom\", original_zoom, 0.2)

func _disable_hurtbox_temporarily(duration: float) -> void:
	if not hurtbox:
		return
	if _hurtbox_disabled_active:
		return
	_hurtbox_disabled_active = true

	_hurtbox_original_layer = int(hurtbox.collision_layer)
	_hurtbox_original_mask = int(hurtbox.collision_mask)

	var disabled_shapes: Array = []
	for child in hurtbox.get_children():
		if child is CollisionShape2D:
			(child as CollisionShape2D).disabled = true
			disabled_shapes.append(child)

	hurtbox.set_deferred(\"monitoring\", false)
	hurtbox.set_deferred(\"collision_layer\", 0)
	hurtbox.set_deferred(\"collision_mask\", 0)

	await get_tree().create_timer(duration).timeout

	for s in disabled_shapes:
		if s and s is CollisionShape2D:
			(s as CollisionShape2D).disabled = false

	hurtbox.set_deferred(\"collision_layer\", _hurtbox_original_layer)
	hurtbox.set_deferred(\"collision_mask\", _hurtbox_original_mask)
	hurtbox.set_deferred(\"monitoring\", true)

	_hurtbox_disabled_active = false

func freeze(reason: String = \"dialog\") -> void:
	is_frozen = true
	can_move = false
	is_attacking = false
	is_dashing = false
	is_parrying = false
	is_shooting = false
	lunge_timer = 0.0
	velocity = Vector2.ZERO
	if walksfx and walksfx.playing:
		walksfx.stop()
	if sprite and sprite.animation != \"idle\":
		sprite.play(\"idle\")

func unfreeze() -> void:
	is_frozen = false
	can_move = true
"

[sub_resource type="RectangleShape2D" id="RectangleShape2D_kdubu"]
size = Vector2(843.139, 563.824)

[sub_resource type="AtlasTexture" id="AtlasTexture_gt76g"]
atlas = ExtResource("1_2v62t")
region = Rect2(0, 0, 1500, 1500)

[sub_resource type="AtlasTexture" id="AtlasTexture_1fr6y"]
atlas = ExtResource("1_2v62t")
region = Rect2(1500, 0, 1500, 1500)

[sub_resource type="AtlasTexture" id="AtlasTexture_2hxjc"]
atlas = ExtResource("1_2v62t")
region = Rect2(3000, 0, 1500, 1500)

[sub_resource type="AtlasTexture" id="AtlasTexture_ebxd8"]
atlas = ExtResource("1_2v62t")
region = Rect2(4500, 0, 1500, 1500)

[sub_resource type="AtlasTexture" id="AtlasTexture_2u7jv"]
atlas = ExtResource("1_2v62t")
region = Rect2(0, 1500, 1500, 1500)

[sub_resource type="AtlasTexture" id="AtlasTexture_24dk6"]
atlas = ExtResource("1_2v62t")
region = Rect2(1500, 1500, 1500, 1500)

[sub_resource type="AtlasTexture" id="AtlasTexture_mryly"]
atlas = ExtResource("1_2v62t")
region = Rect2(3000, 1500, 1500, 1500)

[sub_resource type="AtlasTexture" id="AtlasTexture_kq1c5"]
atlas = ExtResource("1_2v62t")
region = Rect2(4500, 1500, 1500, 1500)

[sub_resource type="AtlasTexture" id="AtlasTexture_ornx7"]
atlas = ExtResource("1_2v62t")
region = Rect2(0, 3000, 1500, 1500)

[sub_resource type="AtlasTexture" id="AtlasTexture_cnnru"]
atlas = ExtResource("1_2v62t")
region = Rect2(1500, 3000, 1500, 1500)

[sub_resource type="AtlasTexture" id="AtlasTexture_540hr"]
atlas = ExtResource("1_2v62t")
region = Rect2(3000, 3000, 1500, 1500)

[sub_resource type="AtlasTexture" id="AtlasTexture_6ip5v"]
atlas = ExtResource("1_2v62t")
region = Rect2(4500, 3000, 1500, 1500)

[sub_resource type="AtlasTexture" id="AtlasTexture_q5dlx"]
atlas = ExtResource("1_2v62t")
region = Rect2(0, 4500, 1500, 1500)

[sub_resource type="AtlasTexture" id="AtlasTexture_c4wnb"]
atlas = ExtResource("1_2v62t")
region = Rect2(1500, 4500, 1500, 1500)

[sub_resource type="AtlasTexture" id="AtlasTexture_7plk7"]
atlas = ExtResource("1_2v62t")
region = Rect2(3000, 4500, 1500, 1500)

[sub_resource type="AtlasTexture" id="AtlasTexture_fbwgr"]
atlas = ExtResource("1_2v62t")
region = Rect2(4500, 4500, 1500, 1500)

[sub_resource type="AtlasTexture" id="AtlasTexture_7mj2a"]
atlas = ExtResource("1_2v62t")
region = Rect2(0, 6000, 1500, 1500)

[sub_resource type="AtlasTexture" id="AtlasTexture_fshgd"]
atlas = ExtResource("1_2v62t")
region = Rect2(1500, 6000, 1500, 1500)

[sub_resource type="AtlasTexture" id="AtlasTexture_wcpx6"]
atlas = ExtResource("2_wcpx6")
region = Rect2(0, 0, 1500, 1500)

[sub_resource type="AtlasTexture" id="AtlasTexture_mjyag"]
atlas = ExtResource("2_wcpx6")
region = Rect2(1500, 0, 1500, 1500)

[sub_resource type="AtlasTexture" id="AtlasTexture_wtyc1"]
atlas = ExtResource("2_wcpx6")
region = Rect2(3000, 0, 1500, 1500)

[sub_resource type="AtlasTexture" id="AtlasTexture_wevls"]
atlas = ExtResource("2_wcpx6")
region = Rect2(0, 1500, 1500, 1500)

[sub_resource type="AtlasTexture" id="AtlasTexture_8013f"]
atlas = ExtResource("2_wcpx6")
region = Rect2(1500, 1500, 1500, 1500)

[sub_resource type="AtlasTexture" id="AtlasTexture_y5ku0"]
atlas = ExtResource("2_wcpx6")
region = Rect2(3000, 1500, 1500, 1500)

[sub_resource type="AtlasTexture" id="AtlasTexture_lwrfi"]
atlas = ExtResource("2_wcpx6")
region = Rect2(0, 3000, 1500, 1500)

[sub_resource type="AtlasTexture" id="AtlasTexture_niowr"]
atlas = ExtResource("2_wcpx6")
region = Rect2(1500, 3000, 1500, 1500)

[sub_resource type="AtlasTexture" id="AtlasTexture_wut41"]
atlas = ExtResource("2_wcpx6")
region = Rect2(3000, 3000, 1500, 1500)

[sub_resource type="AtlasTexture" id="AtlasTexture_s5efc"]
atlas = ExtResource("2_wcpx6")
region = Rect2(0, 4500, 1500, 1500)

[sub_resource type="AtlasTexture" id="AtlasTexture_22e24"]
atlas = ExtResource("3_u3evn")
region = Rect2(0, 0, 1500, 1500)

[sub_resource type="AtlasTexture" id="AtlasTexture_m7xe6"]
atlas = ExtResource("3_u3evn")
region = Rect2(1500, 0, 1500, 1500)

[sub_resource type="AtlasTexture" id="AtlasTexture_kejda"]
atlas = ExtResource("3_u3evn")
region = Rect2(3000, 0, 1500, 1500)

[sub_resource type="AtlasTexture" id="AtlasTexture_uqk8q"]
atlas = ExtResource("3_u3evn")
region = Rect2(4500, 0, 1500, 1500)

[sub_resource type="AtlasTexture" id="AtlasTexture_6uidu"]
atlas = ExtResource("3_u3evn")
region = Rect2(0, 1500, 1500, 1500)

[sub_resource type="AtlasTexture" id="AtlasTexture_qu7as"]
atlas = ExtResource("3_u3evn")
region = Rect2(1500, 1500, 1500, 1500)

[sub_resource type="AtlasTexture" id="AtlasTexture_lyuya"]
atlas = ExtResource("3_u3evn")
region = Rect2(3000, 1500, 1500, 1500)

[sub_resource type="AtlasTexture" id="AtlasTexture_5fipt"]
atlas = ExtResource("3_u3evn")
region = Rect2(4500, 1500, 1500, 1500)

[sub_resource type="AtlasTexture" id="AtlasTexture_j02gt"]
atlas = ExtResource("3_u3evn")
region = Rect2(0, 3000, 1500, 1500)

[sub_resource type="AtlasTexture" id="AtlasTexture_thyvg"]
atlas = ExtResource("3_u3evn")
region = Rect2(1500, 3000, 1500, 1500)

[sub_resource type="AtlasTexture" id="AtlasTexture_nsnm2"]
atlas = ExtResource("3_u3evn")
region = Rect2(3000, 3000, 1500, 1500)

[sub_resource type="AtlasTexture" id="AtlasTexture_f8kvm"]
atlas = ExtResource("3_u3evn")
region = Rect2(4500, 3000, 1500, 1500)

[sub_resource type="AtlasTexture" id="AtlasTexture_3hhlv"]
atlas = ExtResource("3_u3evn")
region = Rect2(0, 4500, 1500, 1500)

[sub_resource type="AtlasTexture" id="AtlasTexture_4qosj"]
atlas = ExtResource("4_5q0wt")
region = Rect2(0, 0, 1500, 1500)

[sub_resource type="AtlasTexture" id="AtlasTexture_cjlbh"]
atlas = ExtResource("4_5q0wt")
region = Rect2(1500, 0, 1500, 1500)

[sub_resource type="AtlasTexture" id="AtlasTexture_kfelt"]
atlas = ExtResource("4_5q0wt")
region = Rect2(0, 1500, 1500, 1500)

[sub_resource type="AtlasTexture" id="AtlasTexture_j7y71"]
atlas = ExtResource("5_u3evn")
region = Rect2(0, 0, 1500, 1500)

[sub_resource type="AtlasTexture" id="AtlasTexture_gum7p"]
atlas = ExtResource("5_u3evn")
region = Rect2(1500, 0, 1500, 1500)

[sub_resource type="AtlasTexture" id="AtlasTexture_dt07w"]
atlas = ExtResource("5_u3evn")
region = Rect2(3000, 0, 1500, 1500)

[sub_resource type="AtlasTexture" id="AtlasTexture_tiulj"]
atlas = ExtResource("5_u3evn")
region = Rect2(0, 1500, 1500, 1500)

[sub_resource type="AtlasTexture" id="AtlasTexture_bdwkj"]
atlas = ExtResource("5_u3evn")
region = Rect2(1500, 1500, 1500, 1500)

[sub_resource type="AtlasTexture" id="AtlasTexture_pmoru"]
atlas = ExtResource("5_u3evn")
region = Rect2(3000, 1500, 1500, 1500)

[sub_resource type="AtlasTexture" id="AtlasTexture_2g5xf"]
atlas = ExtResource("5_u3evn")
region = Rect2(0, 3000, 1500, 1500)

[sub_resource type="AtlasTexture" id="AtlasTexture_0yo88"]
atlas = ExtResource("5_u3evn")
region = Rect2(1500, 3000, 1500, 1500)

[sub_resource type="AtlasTexture" id="AtlasTexture_dbwko"]
atlas = ExtResource("5_u3evn")
region = Rect2(3000, 3000, 1500, 1500)

[sub_resource type="AtlasTexture" id="AtlasTexture_0e48y"]
atlas = ExtResource("5_qthh5")
region = Rect2(0, 0, 1500, 1500)

[sub_resource type="AtlasTexture" id="AtlasTexture_epypp"]
atlas = ExtResource("5_qthh5")
region = Rect2(1500, 0, 1500, 1500)

[sub_resource type="AtlasTexture" id="AtlasTexture_0hol4"]
atlas = ExtResource("5_qthh5")
region = Rect2(3000, 0, 1500, 1500)

[sub_resource type="AtlasTexture" id="AtlasTexture_q6r6c"]
atlas = ExtResource("5_qthh5")
region = Rect2(4500, 0, 1500, 1500)

[sub_resource type="AtlasTexture" id="AtlasTexture_kdubu"]
atlas = ExtResource("5_qthh5")
region = Rect2(6000, 0, 1500, 1500)

[sub_resource type="AtlasTexture" id="AtlasTexture_d21ai"]
atlas = ExtResource("5_qthh5")
region = Rect2(0, 1500, 1500, 1500)

[sub_resource type="AtlasTexture" id="AtlasTexture_rj586"]
atlas = ExtResource("5_qthh5")
region = Rect2(1500, 1500, 1500, 1500)

[sub_resource type="AtlasTexture" id="AtlasTexture_4d7sh"]
atlas = ExtResource("5_qthh5")
region = Rect2(3000, 1500, 1500, 1500)

[sub_resource type="AtlasTexture" id="AtlasTexture_ir8iy"]
atlas = ExtResource("5_qthh5")
region = Rect2(4500, 1500, 1500, 1500)

[sub_resource type="AtlasTexture" id="AtlasTexture_hqns4"]
atlas = ExtResource("5_qthh5")
region = Rect2(6000, 1500, 1500, 1500)

[sub_resource type="AtlasTexture" id="AtlasTexture_x0ka3"]
atlas = ExtResource("5_qthh5")
region = Rect2(0, 3000, 1500, 1500)

[sub_resource type="AtlasTexture" id="AtlasTexture_0h7mo"]
atlas = ExtResource("5_qthh5")
region = Rect2(1500, 3000, 1500, 1500)

[sub_resource type="AtlasTexture" id="AtlasTexture_nr8wp"]
atlas = ExtResource("5_qthh5")
region = Rect2(3000, 3000, 1500, 1500)

[sub_resource type="AtlasTexture" id="AtlasTexture_d2bti"]
atlas = ExtResource("5_qthh5")
region = Rect2(4500, 3000, 1500, 1500)

[sub_resource type="AtlasTexture" id="AtlasTexture_ta5nu"]
atlas = ExtResource("5_qthh5")
region = Rect2(6000, 3000, 1500, 1500)

[sub_resource type="AtlasTexture" id="AtlasTexture_flf07"]
atlas = ExtResource("5_qthh5")
region = Rect2(0, 4500, 1500, 1500)

[sub_resource type="AtlasTexture" id="AtlasTexture_k73cj"]
atlas = ExtResource("5_qthh5")
region = Rect2(1500, 4500, 1500, 1500)

[sub_resource type="AtlasTexture" id="AtlasTexture_rjqkl"]
atlas = ExtResource("5_qthh5")
region = Rect2(3000, 4500, 1500, 1500)

[sub_resource type="AtlasTexture" id="AtlasTexture_fs4d3"]
atlas = ExtResource("5_qthh5")
region = Rect2(4500, 4500, 1500, 1500)

[sub_resource type="AtlasTexture" id="AtlasTexture_7vxoj"]
atlas = ExtResource("5_qthh5")
region = Rect2(6000, 4500, 1500, 1500)

[sub_resource type="AtlasTexture" id="AtlasTexture_ei405"]
atlas = ExtResource("5_qthh5")
region = Rect2(0, 6000, 1500, 1500)

[sub_resource type="AtlasTexture" id="AtlasTexture_e8dv2"]
atlas = ExtResource("5_qthh5")
region = Rect2(1500, 6000, 1500, 1500)

[sub_resource type="AtlasTexture" id="AtlasTexture_2nhjh"]
atlas = ExtResource("5_qthh5")
region = Rect2(3000, 6000, 1500, 1500)

[sub_resource type="AtlasTexture" id="AtlasTexture_bjha6"]
atlas = ExtResource("5_qthh5")
region = Rect2(4500, 6000, 1500, 1500)

[sub_resource type="AtlasTexture" id="AtlasTexture_qilgh"]
atlas = ExtResource("6_1vudk")
region = Rect2(0, 0, 1500, 1500)

[sub_resource type="AtlasTexture" id="AtlasTexture_ytlpd"]
atlas = ExtResource("6_1vudk")
region = Rect2(1500, 0, 1500, 1500)

[sub_resource type="AtlasTexture" id="AtlasTexture_2v765"]
atlas = ExtResource("6_1vudk")
region = Rect2(3000, 0, 1500, 1500)

[sub_resource type="AtlasTexture" id="AtlasTexture_b8fb0"]
atlas = ExtResource("6_1vudk")
region = Rect2(0, 1500, 1500, 1500)

[sub_resource type="AtlasTexture" id="AtlasTexture_ma08v"]
atlas = ExtResource("6_1vudk")
region = Rect2(1500, 1500, 1500, 1500)

[sub_resource type="AtlasTexture" id="AtlasTexture_s32dh"]
atlas = ExtResource("6_1vudk")
region = Rect2(3000, 1500, 1500, 1500)

[sub_resource type="AtlasTexture" id="AtlasTexture_037st"]
atlas = ExtResource("6_1vudk")
region = Rect2(0, 3000, 1500, 1500)

[sub_resource type="AtlasTexture" id="AtlasTexture_6orn5"]
atlas = ExtResource("6_1vudk")
region = Rect2(1500, 3000, 1500, 1500)

[sub_resource type="AtlasTexture" id="AtlasTexture_whnp6"]
atlas = ExtResource("6_1vudk")
region = Rect2(3000, 3000, 1500, 1500)

[sub_resource type="AtlasTexture" id="AtlasTexture_u3evn"]
atlas = ExtResource("7_wcpx6")
region = Rect2(0, 0, 1500, 1500)

[sub_resource type="AtlasTexture" id="AtlasTexture_5q0wt"]
atlas = ExtResource("7_wcpx6")
region = Rect2(1500, 0, 1500, 1500)

[sub_resource type="AtlasTexture" id="AtlasTexture_qthh5"]
atlas = ExtResource("7_wcpx6")
region = Rect2(3000, 0, 1500, 1500)

[sub_resource type="AtlasTexture" id="AtlasTexture_1vudk"]
atlas = ExtResource("7_wcpx6")
region = Rect2(0, 1500, 1500, 1500)

[sub_resource type="AtlasTexture" id="AtlasTexture_k7f46"]
atlas = ExtResource("7_wcpx6")
region = Rect2(1500, 1500, 1500, 1500)

[sub_resource type="AtlasTexture" id="AtlasTexture_47qjj"]
atlas = ExtResource("7_wcpx6")
region = Rect2(3000, 1500, 1500, 1500)

[sub_resource type="AtlasTexture" id="AtlasTexture_dypn8"]
atlas = ExtResource("7_wcpx6")
region = Rect2(0, 3000, 1500, 1500)

[sub_resource type="AtlasTexture" id="AtlasTexture_07ek2"]
atlas = ExtResource("7_wcpx6")
region = Rect2(1500, 3000, 1500, 1500)

[sub_resource type="AtlasTexture" id="AtlasTexture_kg3iu"]
atlas = ExtResource("7_wcpx6")
region = Rect2(3000, 3000, 1500, 1500)

[sub_resource type="AtlasTexture" id="AtlasTexture_ei42f"]
atlas = ExtResource("9_5q0wt")
region = Rect2(0, 0, 1500, 1500)

[sub_resource type="AtlasTexture" id="AtlasTexture_auo7h"]
atlas = ExtResource("9_5q0wt")
region = Rect2(1500, 0, 1500, 1500)

[sub_resource type="AtlasTexture" id="AtlasTexture_y53ib"]
atlas = ExtResource("9_5q0wt")
region = Rect2(3000, 0, 1500, 1500)

[sub_resource type="AtlasTexture" id="AtlasTexture_3dsai"]
atlas = ExtResource("9_5q0wt")
region = Rect2(0, 1500, 1500, 1500)

[sub_resource type="AtlasTexture" id="AtlasTexture_5r414"]
atlas = ExtResource("9_5q0wt")
region = Rect2(1500, 1500, 1500, 1500)

[sub_resource type="AtlasTexture" id="AtlasTexture_xrkwf"]
atlas = ExtResource("9_5q0wt")
region = Rect2(3000, 1500, 1500, 1500)

[sub_resource type="AtlasTexture" id="AtlasTexture_xcfv5"]
atlas = ExtResource("9_5q0wt")
region = Rect2(0, 3000, 1500, 1500)

[sub_resource type="AtlasTexture" id="AtlasTexture_dnrud"]
atlas = ExtResource("9_5q0wt")
region = Rect2(1500, 3000, 1500, 1500)

[sub_resource type="AtlasTexture" id="AtlasTexture_i5kf0"]
atlas = ExtResource("9_5q0wt")
region = Rect2(3000, 3000, 1500, 1500)

[sub_resource type="AtlasTexture" id="AtlasTexture_tm7pc"]
atlas = ExtResource("9_5q0wt")
region = Rect2(0, 4500, 1500, 1500)

[sub_resource type="AtlasTexture" id="AtlasTexture_lbrxf"]
atlas = ExtResource("7_k7f46")
region = Rect2(0, 0, 1500, 1500)

[sub_resource type="AtlasTexture" id="AtlasTexture_xjt7e"]
atlas = ExtResource("7_k7f46")
region = Rect2(1500, 0, 1500, 1500)

[sub_resource type="AtlasTexture" id="AtlasTexture_0xo8l"]
atlas = ExtResource("7_k7f46")
region = Rect2(0, 1500, 1500, 1500)

[sub_resource type="AtlasTexture" id="AtlasTexture_xfyss"]
atlas = ExtResource("7_k7f46")
region = Rect2(1500, 1500, 1500, 1500)

[sub_resource type="AtlasTexture" id="AtlasTexture_3ngjr"]
atlas = ExtResource("7_k7f46")
region = Rect2(0, 3000, 1500, 1500)

[sub_resource type="SpriteFrames" id="SpriteFrames_gt76g"]
animations = [{
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_gt76g")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_gt76g")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_1fr6y")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_1fr6y")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_2hxjc")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_ebxd8")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_2u7jv")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_24dk6")
}],
"loop": true,
"name": &"attack_1",
"speed": 16.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_mryly")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_kq1c5")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_ornx7")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_cnnru")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_540hr")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_6ip5v")
}],
"loop": true,
"name": &"attack_2",
"speed": 16.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_q5dlx")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_c4wnb")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_7plk7")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_fbwgr")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_7mj2a")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_7mj2a")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_7mj2a")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_fshgd")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_fshgd")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_fshgd")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_fshgd")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_fshgd")
}],
"loop": true,
"name": &"attack_3",
"speed": 12.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_wcpx6")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_mjyag")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_wtyc1")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_wevls")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_8013f")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_y5ku0")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_lwrfi")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_niowr")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_wut41")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_s5efc")
}],
"loop": false,
"name": &"dash",
"speed": 16.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_22e24")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_m7xe6")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_kejda")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_uqk8q")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_6uidu")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_qu7as")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_lyuya")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_5fipt")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_j02gt")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_thyvg")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_nsnm2")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_f8kvm")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_3hhlv")
}],
"loop": true,
"name": &"doublejump",
"speed": 36.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_4qosj")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_cjlbh")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_kfelt")
}],
"loop": true,
"name": &"fall",
"speed": 6.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_j7y71")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_gum7p")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_dt07w")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_tiulj")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_bdwkj")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_pmoru")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_2g5xf")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_0yo88")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_dbwko")
}],
"loop": false,
"name": &"hurt",
"speed": 20.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_0e48y")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_epypp")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_0hol4")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_q6r6c")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_kdubu")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_d21ai")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_rj586")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_4d7sh")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_ir8iy")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_hqns4")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_x0ka3")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_0h7mo")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_nr8wp")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_d2bti")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_ta5nu")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_flf07")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_k73cj")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_rjqkl")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_fs4d3")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_7vxoj")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_ei405")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_e8dv2")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_2nhjh")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_bjha6")
}],
"loop": true,
"name": &"idle",
"speed": 8.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_qilgh")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_ytlpd")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_2v765")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_b8fb0")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_ma08v")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_s32dh")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_037st")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_6orn5")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_whnp6")
}],
"loop": true,
"name": &"jump",
"speed": 14.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_u3evn")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_5q0wt")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_qthh5")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_1vudk")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_k7f46")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_47qjj")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_dypn8")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_07ek2")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_kg3iu")
}],
"loop": false,
"name": &"parry",
"speed": 16.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_ei42f")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_auo7h")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_y53ib")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_3dsai")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_5r414")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_xrkwf")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_xcfv5")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_dnrud")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_i5kf0")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_tm7pc")
}],
"loop": false,
"name": &"projectile",
"speed": 12.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_lbrxf")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_xjt7e")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_0xo8l")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_xfyss")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_3ngjr")
}],
"loop": true,
"name": &"walk",
"speed": 8.0
}]

[sub_resource type="RectangleShape2D" id="RectangleShape2D_1fr6y"]
size = Vector2(1015.87, 1763.86)

[sub_resource type="RectangleShape2D" id="RectangleShape2D_qthh5"]
size = Vector2(18.3333, 36.6667)

[sub_resource type="RectangleShape2D" id="RectangleShape2D_1vudk"]
size = Vector2(37.3333, 26.6667)

[sub_resource type="CircleShape2D" id="CircleShape2D_qthh5"]
radius = 116.0

[node name="main_character" type="CharacterBody2D" groups=["player"]]
scale = Vector2(-1.5, 1.5)
collision_layer = 2
script = SubResource("GDScript_wtcfe")
speed = 350.0
projectile_scene = ExtResource("1_qthh5")

[node name="StateMachine" type="Node2D" parent="."]
position = Vector2(2, 14)

[node name="AttackTimer" type="Timer" parent="StateMachine"]
wait_time = 0.4
one_shot = true

[node name="AttackCooldownTimer" type="Timer" parent="StateMachine"]
wait_time = 0.3
one_shot = true

[node name="AttackComboTimer" type="Timer" parent="StateMachine"]
wait_time = 2.0

[node name="AttackArea" type="Area2D" parent="." groups=["sword"]]
position = Vector2(31, -17)
scale = Vector2(0.051, 0.051)
collision_mask = 65535

[node name="CollisionShape2D" type="CollisionShape2D" parent="AttackArea"]
position = Vector2(-343.137, 274.51)
scale = Vector2(-1, -1)
shape = SubResource("RectangleShape2D_kdubu")
disabled = true

[node name="AnimatedSprite2D" type="AnimatedSprite2D" parent="."]
position = Vector2(31, -17)
scale = Vector2(0.051, 0.051)
sprite_frames = SubResource("SpriteFrames_gt76g")
animation = &"parry"
autoplay = "idle"
frame = 8
frame_progress = 1.0

[node name="SpawnPoint" type="Node2D" parent="."]
position = Vector2(32, -5.33333)

[node name="HurtBox" type="Area2D" parent="."]
collision_mask = 3

[node name="CollisionShape2D" type="CollisionShape2D" parent="HurtBox"]
position = Vector2(32, -5)
scale = Vector2(0.021, 0.021)
shape = SubResource("RectangleShape2D_1fr6y")

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
position = Vector2(33.5, -5.33333)
shape = SubResource("RectangleShape2D_qthh5")

[node name="ParryArea" type="Area2D" parent="."]

[node name="CollisionShape2D" type="CollisionShape2D" parent="ParryArea"]
position = Vector2(16, -5.33333)
shape = SubResource("RectangleShape2D_1vudk")

[node name="ParryStun" type="Area2D" parent="."]
collision_mask = 65535

[node name="CollisionShape2D" type="CollisionShape2D" parent="ParryStun"]
position = Vector2(33.3333, -16)
shape = SubResource("CircleShape2D_qthh5")

[node name="Audio" type="Node" parent="."]

[node name="Parry" type="AudioStreamPlayer" parent="Audio"]
stream = ExtResource("12_dypn8")

[node name="Attack1" type="AudioStreamPlayer" parent="Audio"]
stream = ExtResource("13_07ek2")

[node name="Attack2" type="AudioStreamPlayer" parent="Audio"]
stream = ExtResource("14_kg3iu")

[node name="Attack3" type="AudioStreamPlayer" parent="Audio"]
stream = ExtResource("15_mjyag")

[node name="Hurt" type="AudioStreamPlayer" parent="Audio"]
stream = ExtResource("16_kg3iu")

[node name="Projectile" type="AudioStreamPlayer" parent="Audio"]
stream = ExtResource("17_mjyag")

[node name="Dash" type="AudioStreamPlayer" parent="Audio"]
stream = ExtResource("18_mjyag")

[node name="Draw" type="AudioStreamPlayer" parent="Audio"]
stream = ExtResource("19_wtyc1")

[node name="Walk" type="AudioStreamPlayer" parent="Audio"]
stream = ExtResource("20_wevls")
volume_db = 10.065

[node name="Jump" type="AudioStreamPlayer" parent="Audio"]
stream = ExtResource("21_8013f")

[node name="DoubleJump" type="AudioStreamPlayer" parent="Audio"]
stream = ExtResource("22_y5ku0")
